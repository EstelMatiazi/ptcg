@import '~@angular/material/theming';
@import '../../../theme/variables.scss';

$board-min-width: calc((4 + #{$ptcg-bench-slots}) * (var(--card-size) + #{map-get($padding, small)}));
$board-min-height: calc(6 * var(--card-size) * #{$card-aspect-ratio} + 2 * #{map-get($padding, normal)});

:host {
  display: block;
  overflow: auto;
}

.ptcg-board-container {
  height: 100%;
  width: calc(var(--card-size) * #{$ptcg-bench-slots} + #{($ptcg-bench-slots + 1) * map-get($padding, small)});
}

.ptcg-board-container {
  display: grid;
  grid-template-rows: 1fr 1fr;
  margin: 0 auto;
  min-height: $board-min-height;
  min-width: $board-min-width;
}

.ptcg-board-player {
  display: grid;

  grid-template-columns: 2fr #{$ptcg-bench-slots}fr 2fr;
  grid-template-rows: auto;

  grid-template-areas:
    "prizes active deck"
    "prizes bench deck";

  &.upside-down {
    transform: rotate(180deg);
  }
}

.ptcg-board-row {
  align-items: center;
  display: flex;
  flex-direction: row;
  height: 100%;
  justify-content: space-evenly;

  > ptcg-board-card,
  > .ptcg-board-drop-target {
    max-width: var(--card-size);
    width: calc(#{100 / $ptcg-bench-slots}% - #{map-get($padding, small)});
  }
}

.ptcg-board-drop-target > ptcg-board-card {
  display: block;
  width: 100%;
}

ptcg-board-prizes {
  grid-area: prizes;
}

ptcg-board-deck {
  grid-area: deck;
}

.ptcg-board-active {
  grid-area: active;
}

.ptcg-board-bench {
  grid-area: bench;
}

.ptcg-card-preview {
  position: absolute;
  width: var(--card-size);
}
